head	1.3;
access;
symbols
	105alpha:1.3
	104alpha:1.3
	103alpha:1.3
	102alpha:1.3
	101alpha:1.3
	100alpha:1.3;
locks; strict;
comment	@ * @;


1.3
date	98.03.02.16.38.54;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	95.03.08.05.41.42;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	95.03.08.03.08.31;	author norm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@'./vmc'
@
text
@%{
/*
 * @@(#)vmcpar.y	1.3  1/18/90
 */
#include <stdlib.h>
#include <stdio.h>
#include "defs.h"

extern FILE *actions, *otherstuff;
extern int linenumber;
int theline;
%} 
%token  OEOF 0 /* "end of file" */
%token	KSTATE
%token	KINTERRUPTS
%token	KINSTRUCTIONS
%token <string> ID /* "identifier" */
%token <string> NUMBER /* "number" */
%token <string> CODE /* "{ ... }" */
%token <string> STRING /* "string" */
%start machine
%union yylval {
    struct identifier_entry	*id;
    char			*string;
} 
%%
machine :
		odefinitions ostate ointerrupts oinstructions
	;
odefinitions:
		
	|	CODE
		{ installDefinition($1); }
	;
ostate:
		KSTATE states
	|
	;
states:
		
	|	states ID STRING STRING
		{ installState($2, $3, $4); }
	;
ointerrupts:
		KINTERRUPTS interrupts
	|	
	;
interrupts:
		
	|	interrupts ID CODE
		{ installInterrupt($2, $3); }
	;
oinstructions:
		KINSTRUCTIONS instructions
	|	
	;
instructions:
	|	instructions { theline = linenumber; } ID STRING CODE
		{ installInstruction($3, $4, $5, theline); }
	;
%%
@


1.2
log
@Make more portable to other lex-like things
@
text
@d5 1
a5 1
#include <malloc.h>
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
extern int yylineno;
d28 1
a28 1
		odefinitions ostate ointerrupts oinstructions OEOF
d58 1
a58 1
	|	instructions { theline = yylineno; } ID STRING CODE
@
