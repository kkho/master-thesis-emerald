head	1.3;
access;
symbols
	105alpha:1.3
	104alpha:1.2
	103alpha:1.2
	102alpha:1.2
	101alpha:1.2
	100alpha:1.2;
locks; strict;
comment	@ * @;


1.3
date	99.01.22.00.23.12;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	98.02.23.16.19.34;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	98.02.11.20.14.17;	author norm;	state Exp;
branches;
next	;


desc
@Miscelaneous ccalls.
@


1.3
log
@Added mgetenv to avoid compiler warnings, enabled readdir
@
text
@/*
 * misk
 *
 * Get at exit(2), getenv(3).
 */

#pragma warning(disable: 4068)
#pragma pointer_size long
#include <stdlib.h>
#pragma pointer_size short

#if !defined(CCALL)
#define CCALL(func, subcode, argstring) 
#endif /* CCALL */
extern void die(void);

CCALL(die, UEXIT, "vi")
CCALL(mgetenv, "UGETENV", "sS")
CCALL(opendir, "UOPENDIR", "pS");
CCALL(mreaddir, "UREADDIR", "sp");
CCALL(closedir, "UCLOSEDIR", "vp");
@


1.2
log
@'.'
@
text
@d18 4
a21 6
CCALL(getenv, "UGETENV", "sS")
     /*
      * xxCCALL(opendir, "UOPENDIR", "pS");
      * xxCCALL(mreaddir, "UREADDIR", "sp");
      * xxCCALL(closedir, "UCLOSEDIR", "vp");
      */
@


1.1
log
@Initial revision
@
text
@d7 1
d15 1
d19 5
a23 3
CCALL(opendir, "UOPENDIR", "pS");
CCALL(mreaddir, "UREADDIR", "sp");
CCALL(closedir, "UCLOSEDIR", "vp");
@
