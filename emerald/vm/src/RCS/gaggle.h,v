head	1.4;
access;
symbols
	105alpha:1.4
	104alpha:1.4
	103alpha:1.4
	102alpha:1.4
	101alpha:1.4
	100alpha:1.4;
locks; strict;
comment	@ * @;


1.4
date	98.03.02.16.37.40;	author norm;	state Exp;
branches;
next	1.3;

1.3
date	98.02.23.16.20.39;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	98.02.09.17.55.17;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	97.01.21.23.59.53;	author norm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@'./vm/src'
@
text
@/*
 * Gaggles
 */
#ifndef _EMERALD_GAGGLE_H
#define _EMERALD_GAGGLE_H

#include "types.h"
#include "oidtoobj.h"
#include "vm_exp.h"
#include "oisc.h"
#include "remote.h"
#include "rinvoke.h"

typedef struct gtype *gtypeptr;

struct gtype{
  OID gmember;
  gtypeptr next;
};

extern OISc gaggleTable;
extern void createGaggle(OID g);
extern void initGaggle(void);
extern void add_gmember(OID gid, OID newMember);
extern void delete_gmember(OID gid, OID deadMember);
extern OID get_gmember(OID gid);
extern OID get_gelement(OID gid, int index);
extern int get_gsize(OID gid);
extern void sendGmUpdate(Node srv, Stream str, OID moid, OID ooid, OID ctoid, int dead);
extern void sendGaggleUpdate(OID moid, OID ooid, OID ctoid, int dead);
extern void sendGaggleNews(Node srv, Stream str);
#endif /* _EMERALD_GAGGLE_H */
@


1.3
log
@'./vm/src'
@
text
@d29 1
a29 1
extern void sendGmUpdate(vmThreadId srv, Stream str, OID moid, OID ooid, OID ctoid, int dead);
d31 1
a31 1
extern void sendGaggleNews(vmThreadId srv, Stream str);
@


1.2
log
@Checkpoint
@
text
@d4 2
a5 2
#ifndef _ADDG_H
#define _ADDG_H
d23 1
a23 1
extern void initGaggle();
d32 1
a32 1
#endif /* _ADDG_H */
@


1.1
log
@Initial revision
@
text
@d4 3
d9 1
a9 1
#include "vm_i.h"
a13 3
#ifndef _ADDG_H
#define _ADDG_H

d25 1
d29 3
a31 3
extern void sendGmUpdate(vmThreadId srv, OID moid, OID ooid, OID ctoid);
extern void sendGaggleUpdate(OID moid, OID ooid, OID ctoid);
extern void sendGaggleNews(vmThreadId srv);
@
