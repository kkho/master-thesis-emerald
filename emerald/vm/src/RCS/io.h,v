head	1.5;
access;
symbols
	105alpha:1.5
	104alpha:1.5
	103alpha:1.4
	102alpha:1.4
	101alpha:1.4
	100alpha:1.3;
locks; strict;
comment	@ * @;


1.5
date	98.05.08.19.38.21;	author norm;	state Exp;
branches;
next	1.4;

1.4
date	98.04.08.21.45.27;	author norm;	state Exp;
branches;
next	1.3;

1.3
date	98.04.04.20.08.38;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	98.03.02.16.37.40;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	98.02.23.17.01.05;	author norm;	state Exp;
branches;
next	;


desc
@IO callback infrastructure.
@


1.5
log
@Cleanups to remove useless leftover drivel found by cxref
@
text
@#ifndef _EMERALD_IO_H
#define _EMERALD_IO_H

/*
 * This should only happen when cxref is processing the file.
 */
#ifndef _EMERALD_SYSTEM_H
#include "system.h"
#endif

#ifndef _EMERALD_DIST_H
#include "dist.h"
#endif

#ifdef WIN32
#define ssize_t size_t
#endif

#ifdef FAKE_SELECT
#define real_select selecx
#define io_select select
#else
#define real_select select
#endif

#ifdef SELECT_USES_INT
#define EM_SELECT_T int 
#define S_A(x) &((x).fds_bits)
#else
#define EM_SELECT_T fd_set
#define S_A(x) &(x)
#endif 
typedef enum { EIO_Read, EIO_Write, EIO_Except } EDirection;
typedef void (*IoHandler)(int fd, EDirection direction, void *state);

typedef struct readBuffer {
  char *buffer;
  int nread, goal, acceptless;
  ssize_t (*reader)(int, void *, size_t);
} readBuffer;

extern void setupReadBuffer(readBuffer *rb, void *buf, int goal, int acceptless,
		     ssize_t (*reader)(int, void *, size_t));
extern int tryReading(readBuffer *rb, int s);

extern void IOInit(void);
extern void checkForIO(int wait);
extern ssize_t readFromSocket(int, void *, size_t);
extern ssize_t writeToSocket(int, void *, size_t);
extern ssize_t readFromSocketN(int, void *, size_t);
extern ssize_t writeToSocketN(int, void *, size_t);
extern void setHandler(int fd, IoHandler h, EDirection direction, void *state);
extern void resetHandler(int fd, EDirection direction);
extern ssize_t io_read(int, void *, size_t);
#endif
@


1.4
log
@More reliable process management, got xforms working
@
text
@d4 7
@


1.3
log
@Small fixes to locate and move
@
text
@d8 4
@


1.2
log
@'./vm/src'
@
text
@d8 7
d16 1
d19 1
@


1.1
log
@Initial revision
@
text
@d4 2
a5 2
#ifndef _EMERALD_THREADS_H
#include "threads.h"
d8 5
a12 4
#include <sys/types.h>
#include <sys/time.h>
#include <unistd.h>

d34 1
@
