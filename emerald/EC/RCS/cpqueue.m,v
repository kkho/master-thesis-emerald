head	1.4;
access;
symbols
	105alpha:1.4
	104alpha:1.4
	103alpha:1.4
	102alpha:1.4
	101alpha:1.4
	100alpha:1.4
	DIKU_0:1.4
	carlton_start:1.2
	immel_start:1.2;
locks; strict;


1.4
date	94.08.22.23.43.44;	author norm;	state Exp;
branches;
next	1.3;

1.3
date	94.08.17.16.50.36;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	91.04.22.22.51.49;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	91.04.22.22.51.47;	author norm;	state Exp;
branches;
next	;


desc
@
@


1.4
log
@August 94 Checkpoint II
@
text
@const RISCP <- typeobject RISCP
  function getElement [Integer] -> [CPAble]
  function upperbound -> [Integer]
  function lowerbound -> [Integer]
end RISCP

const CPQueue <- typeobject CPQueue
  function  getElement [Integer] -> [CPAble]
  operation setElement [Integer, CPAble]
  function  upperbound -> [Integer]
  function  lowerbound -> [Integer]
  function  getElement [Integer, Integer] -> [CPQueue]
  operation setElement [Integer, Integer, RISCP]
  operation slideTo [Integer]
  operation addUpper[CPAble]
  operation removeUpper -> [CPAble]
  operation addLower [CPAble]
  operation removeLower -> [CPAble]
  function  empty -> [Boolean]
  operation catenate [RISCP] -> [CPQueue]
end CPQueue

const CPAble <- typeobject CPAble
  operation fetchIndex -> [Integer]
  operation getIndex[Integer, CPQueue]
  operation cpoint [OutStream]
end CPAble

export CPQueue, CPAble

@


1.3
log
@Checkpoint of DIKU August 94 changes
@
text
@d12 2
a13 2
  function  getSlice [Integer, Integer] -> [CPQueue]
  operation setSlice [Integer, Integer, RISCP]
@


1.2
log
@type -> typeobject sed
@
text
@d7 1
a7 1
const CPQueueT <- typeobject CPQueueT
d12 1
a12 1
  function  getSlice [Integer, Integer] -> [CPQueueT]
d20 2
a21 2
  operation catenate [RISCP] -> [CPQueueT]
end CPQueueT
d25 1
a25 1
  operation getIndex[Integer, CPQueueT]
a27 2

const CPQueue <- Array.of[CPAble]
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
const RISCP <- type RISCP
d7 1
a7 1
const CPQueueT <- type CPQueueT
d23 1
a23 1
const CPAble <- type CPAble
d31 1
a31 1
export CPQueue, CPAble to "Jekyll"
@
