head	1.8;
access;
symbols
	105alpha:1.8
	104alpha:1.8
	103alpha:1.8
	102alpha:1.8
	101alpha:1.8
	100alpha:1.8
	DIKU_0:1.5
	carlton_start:1.4
	immel_start:1.2;
locks; strict;


1.8
date	95.03.29.18.19.54;	author norm;	state Exp;
branches;
next	1.7;

1.7
date	95.03.03.05.44.23;	author norm;	state Exp;
branches;
next	1.6;

1.6
date	94.12.06.20.12.48;	author norm;	state Exp;
branches;
next	1.5;

1.5
date	94.08.17.16.50.33;	author norm;	state Exp;
branches;
next	1.4;

1.4
date	93.06.16.05.20.24;	author norm;	state Exp;
branches;
next	1.3;

1.3
date	92.12.10.17.06.49;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	91.04.22.22.50.45;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	91.04.22.22.50.44;	author norm;	state Exp;
branches;
next	;


desc
@
@


1.8
log
@Get rid of split, and make execute now and eval work again
@
text
@export InputBuffer, InputThing

const InputThing <- typeobject InputThing
  operation getChar -> [Character]
  function eos -> [Boolean]
  operation fillVector[VectorOfChar] -> [Integer]
end InputThing

const InputBuffer <- immutable object InputBuffer

  const BufferType <- typeobject BufferType
    operation collect [Character]
    operation reset
    function getElement[Integer] -> [Character]
    function asString -> [String]
    operation readString [InputThing, Character]
  end BufferType

  export function getSignature -> [r : Signature]
    r <- BufferType
  end getSignature

  export operation create -> [r : BufferType]
    r <- object aBuffer
	const limit <- 4096
	const b : VectorOfChar <- VectorofChar.create[limit]
	var size : Integer <- 0

	export operation reset
	  size <- 0
	end reset
  
	export operation collect [c : Character]
	  b[size] <- c
	  size <- size + 1
	end collect

	export function getElement [i : Integer] -> [r : Character]
	  r <- b[i]
	end getElement
	
	export function asString -> [r : String]
	  r <- String.FLiteral[b, 0, size]
	end asString

	export operation readString[f : InputThing, eof : Character]
	  begin
	    size <- f.fillVector[b]
	    failure
	      size <- 0
	    end failure
	  end
	  b[size] <- eof
	end readString
    end aBuffer
  end create
end InputBuffer
@


1.7
log
@Use new streams code
@
text
@d53 1
a53 4
	  if size = 0 then
	    % end of file
	    b[size] <- eof
	  end if
@


1.6
log
@Clean up generating the second things in references
@
text
@d47 6
a52 1
	  size <- f.fillVector[b]
@


1.5
log
@Checkpoint of DIKU August 94 changes
@
text
@d25 1
a25 1
	const limit <- 256
@


1.4
log
@Convert to the new subscript syntax a[b]
@
text
@d1 1
a1 1
export InputBuffer
d3 6
d16 1
d26 1
a26 1
	const b  <- VectorofChar.create[limit]
d45 8
@


1.3
log
@Removed all monitors
@
text
@d27 1
a27 1
	  b(size) <- c
d32 1
a32 1
	  r <- b(i)
@


1.2
log
@type -> typeobject sed
@
text
@a17 1
      monitor
a37 1
      end monitor
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
export InputBuffer to "Jekyll"
d5 1
a5 1
  const BufferType <- type BufferType
@
