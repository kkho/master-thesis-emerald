head	1.6;
access;
symbols
	105alpha:1.6
	104alpha:1.6
	103alpha:1.6
	102alpha:1.6
	101alpha:1.6
	100alpha:1.6
	DIKU_0:1.6
	carlton_start:1.5
	immel_start:1.3;
locks; strict;


1.6
date	94.06.08.15.24.42;	author norm;	state Exp;
branches;
next	1.5;

1.5
date	92.12.12.05.03.16;	author norm;	state Exp;
branches;
next	1.4;

1.4
date	92.12.10.17.07.34;	author norm;	state Exp;
branches;
next	1.3;

1.3
date	91.04.22.22.57.13;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	91.04.22.22.57.12;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	91.04.22.22.57.11;	author norm;	state Exp;
branches;
next	;


desc
@
@


1.6
log
@First attempt at abcons
@
text
@export Returnandfailstat

const returnandfailstat <- class Returnandfailstat (Tree)
    export function upperbound -> [r : Integer]
      r <- ~1
    end upperbound
    export function getElement [i : Integer] -> [r : Tree]
    end getElement
    export operation setElement [i : Integer, r : Tree]
    end setElement
    export operation copy [i : Integer] -> [r : Tree]
      r <- self
    end copy

  export operation generate[xct : Printable]
    const bc <- view xct as ByteCode
    bc.addCode["RETFAIL"]
    bc.addValue[0, 1]		% WRONG
  end generate

  export function asString -> [r : String]
    r <- "returnandfailstat"
  end asString
end Returnandfailstat
@


1.5
log
@Get rid of return on generate
@
text
@d16 1
a16 4
    const bc <- view xct as typeobject T
	operation addCode[String]
	operation addValue [Integer, Integer]
      end T
@


1.4
log
@Removed all monitors
@
text
@d15 1
a15 1
  export operation generate[xct : Printable] -> [rct : None]
@


1.3
log
@type -> typeobject sed
@
text
@a3 1
  monitor
a13 1
  end monitor
@


1.2
log
@Make generate return something (currently nothing interesting)
@
text
@d1 1
a1 3
import Tree, FTree, Printable from "Jekyll"
import SymbolTable from "Jekyll"
export Returnandfailstat to "Jekyll"
d18 1
a18 1
    const bc <- view xct as type T
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
  export operation generate[xct : Printable]
@
