head	1.7;
access;
symbols
	105alpha:1.7
	104alpha:1.7
	103alpha:1.7
	102alpha:1.7
	101alpha:1.7
	100alpha:1.7
	DIKU_0:1.6
	carlton_start:1.6
	immel_start:1.4;
locks; strict;


1.7
date	98.03.24.16.09.00;	author norm;	state Exp;
branches;
next	1.6;

1.6
date	93.06.21.19.14.40;	author norm;	state Exp;
branches;
next	1.5;

1.5
date	92.12.10.17.07.03;	author norm;	state Exp;
branches;
next	1.4;

1.4
date	91.05.14.15.55.12;	author norm;	state Exp;
branches;
next	1.3;

1.3
date	91.04.22.22.52.58;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	91.04.22.22.52.57;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	91.04.22.22.52.56;	author norm;	state Exp;
branches;
next	;


desc
@
@


1.7
log
@'.'
@
text
@export Fielddecl

const fielddecl <- class Fielddecl (Tree) [xxsym : Tree, xxtype : Tree, xxvalue : Tree]
% If doing move/visit
    field isAttached : Boolean <- false
    field isConst : Boolean <- false
    field sym : Tree <- xxsym
    field xtype : Tree <- xxtype
    field value  : Tree <- xxvalue
    export function upperbound -> [r : Integer]
      r <- 2
    end upperbound
    export function getElement [i : Integer] -> [r : Tree]
      if i = 0 then
	r <- sym
      elseif i = 1 then
	r <- xtype
      elseif i = 2 then
	r <- value
      end if
    end getElement
    export operation setElement [i : Integer, r : Tree]
      if i = 0 then
	sym <- r
      elseif i = 1 then
	xtype <- r
      elseif i = 2 then
	value <- r
      end if
    end setElement
    export operation copy [i : Integer] -> [r : Tree]
      var nsym, nxtype, nvalue : Tree
      if sym !== nil then nsym <- sym.copy[i] end if
      if xtype !== nil then nxtype <- xtype.copy[i] end if
      if value !== nil then nvalue <- value.copy[i] end if
      r <- fielddecl.create[ln, nsym, nxtype, nvalue]
      (view r as Attachable)$isAttached <- isAttached
    end copy

  export function asString -> [r : String]
    r <- "fielddecl"
  end asString
end Fielddecl
@


1.6
log
@Renamed the isImmutable component of fields to isConst
@
text
@d37 1
@


1.5
log
@Removed all monitors
@
text
@d6 1
a6 1
    field isimmutable : Boolean <- false
@


1.4
log
@Enabled attach declarations
@
text
@a3 1
  monitor
a37 1
  end monitor
@


1.3
log
@type -> typeobject sed
@
text
@d6 1
a6 1
%    field isAttached : Boolean <- false
@


1.2
log
@Don't waste space on move/visit/attached
@
text
@d1 1
a1 3
import Tree, FTree, Printable from "Jekyll"
import SymbolTable from "Jekyll"
export Fielddecl to "Jekyll"
@


1.1
log
@Initial revision
@
text
@d7 2
a8 1
    field isAttached : Boolean <- false
@
