head	1.6;
access;
symbols
	105alpha:1.5
	104alpha:1.5
	103alpha:1.5
	102alpha:1.5
	101alpha:1.5
	100alpha:1.5;
locks; strict;
comment	@# @;


1.6
date	2007.06.11.02.44.43;	author norm;	state Exp;
branches;
next	1.5;

1.5
date	98.02.09.18.09.35;	author norm;	state Exp;
branches;
next	1.4;

1.4
date	96.03.16.06.51.14;	author norm;	state Exp;
branches;
next	1.3;

1.3
date	95.03.14.19.15.51;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	95.03.03.05.48.52;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	95.02.24.20.43.17;	author norm;	state Exp;
branches;
next	;


desc
@co ec
@


1.6
log
@Check in current version
@
text
@#!/bin/sh
I="set dieonerror@@"
E=0
ECHO=echo
ARGS=

for i do
    if [ $E = 1 ] ; then
	I=$I"$i@@" ;
	E=0
    else
	case $i in
	    set) I=$I"set "; E=1; ;;
	    -s) I=$I"set "; E=1; ;;
	    unset) I=$I"unset "; E=1; ;;
	    -u) I=$I"unset "; E=1; ;;
	    -T) I=$I"set trace"; E=1; ;;
	    -O*) ARGS=$ARGS$i; ;;
	    load) I=$I"load "; E=1; ;;
	    -l) I=$I"load "; E=1; ;;
	     *) I=$I"$i@@"; ;;
	 esac
    fi
done

$ECHO $I | tr '@@' '\012' | emc $ARGS
@


1.5
log
@Cleaned up
@
text
@d5 1
d18 1
d26 1
a26 1
$ECHO $I | tr '@@' '\012' | emc
@


1.4
log
@I think I finally found a way to reliably generate the newlines
@
text
@d24 1
a24 1
$ECHO $I | tr '@@' '\n' | emc
@


1.3
log
@Support the load command and set and unset directly
@
text
@d2 1
a2 1
I="set dieonerror\n"
d4 1
d8 1
a8 1
	I=$I"$i\n" ;
d19 1
a19 1
	     *) I=$I"$i\n"; ;;
d24 1
a24 1
echo $I | emc
@


1.2
log
@Major reorganization
@
text
@d11 1
d13 1
d16 2
@


1.1
log
@Initial revision
@
text
@d1 3
a3 5
#!/bin/csh -f
set inputscript = /tmp/emc$$
rm -f $inputscript
onintr cleanup
echo set dieonerror > $inputscript 
d5 4
a8 12
while ($#argv > 0)
    set i = $1
    shift
    if ($i == "-s") then
	echo set $1 >> $inputscript
	shift
    else if ($i == "-u") then
	echo unset $1 >> $inputscript
	shift
    else if ($i == "-T") then
	echo set trace$1 >> $inputscript
	shift
d10 8
a17 3
	echo $i >> $inputscript
    endif
end
d19 1
a19 5
emc < $inputscript

# Do this even if interrupted
cleanup:
rm -f $inputscript
@
