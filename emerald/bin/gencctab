#!  /bin/sh
# -* sh *-

#allfiles="emstream.h string.h rand.h misk.h misc.h"
allfiles=`cd $EMERALDROOT/ccalls ; make doths | egrep -v 'Entering|Leaving'`

#selectedfiles="emstream.h string.h rand.h misk.h"
selectedfiles=`echo $* | sed -e 's/\.o/.h/g'`
ncctabc=cctab.c
ncctabh=cctab.h
moduleindex=0

cp /dev/null $ncctabc
cp /dev/null $ncctabh

cat << THEEND >> $ncctabh
/*
 * $ncctabh
 *
 * THIS FILE IS AUTOMATICALLY GENERATED.  DO NOT EDIT.
 */

#ifndef _EMERALD_CCALLTAB_H
#define _EMERALD_CCALLTAB_H 1

typedef int (*ccallFunction)(void);

typedef struct CCallDescriptor {
  ccallFunction ccFunction;
  char* ccName;
  char* ccArgTemplate;
} CCallDescriptor;

extern CCallDescriptor *ccalltable[];
THEEND

cat << THEEND >> $ncctabc
/*
 * $ncctabc
 *
 * THIS FILE IS AUTOMATICALLY GENERATED.  DO NOT EDIT.
 */

#define E_NEEDS_STDIO_ONLY
#include "system.h"
#include "assert.h"
#include "$ncctabh"

THEEND

for file in $allfiles
do
	absfile=$EMERALDROOT/ccalls/$file
	modulename=`echo $file |tr -d .h| tr a-z A-Z`
	selected=0
	for i in $selectedfiles	
	do
		if [ $i = $file ]
		then
			selected=1
		fi
	done
	if [ $selected = 1 ]
	then
		echo Generating $modulename
	else
		echo Skipping $modulename
		continue
	fi  
	echo "CCallDescriptor ${modulename}_table[] = { " >> $ncctabc
  	echo "#define ${modulename} $moduleindex" >> $ncctabh
 	ccs=(`grep '^CCALL' $absfile | sed -e 's/CCALL *( *//' -e 's/,/ /g' -e 's/)//' -e 's/"//g' -e 's/;//'`)
	i=0
	functionindex=0
	if [ -z "$ccs" ]
	then 
		echo \ \ \{ \(ccallFunction\) notselected, \"\", \"\" \}, >> $ncctabc 
	else
		while [ $i -lt ${#ccs[@]} ]
		do
			functionname=${ccs[$i]}
			i=$(($i+1))
			ccallname=${ccs[$i]}
			i=$(($i+1))
			ccallstring=${ccs[$i]}
			i=$(($i+1))
		
			if [ $selected = 1 ]
			then
				echo \ \ \{ \(ccallFunction\) $functionname, \"$ccallname\", \"$ccallstring\" \}, >> $ncctabc 
				echo "extern int $functionname(void);" >> $ncctabh 
			else
				echo \ \ \{ \(ccallFunction\) notselected, \"$ccallname\", \"$ccallstring\" \}, >> $ncctabc 
			fi
 			echo "#define ${ccallname} $functionindex" >> $ncctabh 
			functionindex=$(($functionindex+1))
		done
	fi
	echo "};" >> $ncctabc 
	moduleindex=$(($moduleindex+1))
done

echo "CCallDescriptor *ccalltable[] = {" >> $ncctabc 

for absfile in $allfiles
do
	file=${absfile}
	selected=0
	for i in $selectedfiles	
	do
		if [ $i = $file ]
		then
			selected=1
		fi
	done
	if [ $selected = 1 ]
	then
		modulename=`echo $file |tr -d .h| tr a-z A-Z`
		echo "  ${modulename}_table," >> $ncctabc 
	else
		echo "  0," >> $ncctabc 
	fi	
done
echo "};" >> $ncctabc 
echo "#endif" >> $ncctabh 

