head	1.2;
access;
symbols
	105alpha:1.2
	104alpha:1.2
	103alpha:1.2
	102alpha:1.2
	101alpha:1.2
	100alpha:1.2
	DIKU_0:1.1;
locks; strict;
comment	@# @;


1.2
date	97.01.22.00.05.57;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	93.06.01.23.28.18;	author mueller;	state Exp;
branches;
next	;


desc
@Emerald compiler test
@


1.2
log
@Fix to use <- instead of ==, better tests of vectors
@
text
@const tcharacter <- object tcharacter
  const myTest <- runtest.create[stdin, stdout, "tcharacter"]
  initially
    var i, j : Character
    i <- '\^@@'
    myTest.check[i = '\^@@', "i = '\\^@@'"]
    myTest.check[i == '\^@@', "i == '\\^@@'"]
    i <- 'd'
    j <- 'g'
    myTest.check[i = 'd', "i = 'd'"]
    myTest.check[i == 'd', "i == 'd'"]
    myTest.check[i.ord = 100, "i.ord = 100"]
    myTest.check[i.ord - 'a'.ord = 3, "i.ord - 'a'.ord = 3"]
    myTest.check[j.ord - 'a'.ord = 6, "j.ord - 'a'.ord = 6"]
    myTest.check[j > i, "j > i"]
    myTest.check[i < j, "i < j"]
    myTest.check[j >= i, "j >= i"]
    myTest.check[i <= j, "i <= j"]
    myTest.check[i != j, "i != j"]
    myTest.check[i.asString = "d", "i.asString = \"d\""]
    myTest.check[('\^@@').asString = "\^@@", "('\\^@@').asString = \"\\^@@\""]
    myTest.done
  end initially
end tcharacter
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
  const myTest == runtest.create[stdin, stdout, "tcharacter"]
@
