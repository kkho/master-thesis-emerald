head	1.4;
access;
symbols
	105alpha:1.4
	104alpha:1.4
	103alpha:1.4
	102alpha:1.4
	101alpha:1.4
	100alpha:1.4
	DIKU_0:1.2
	immel_start:1.2;
locks; strict;


1.4
date	97.01.21.23.51.09;	author norm;	state Exp;
branches;
next	1.3;

1.3
date	95.03.29.20.27.28;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	91.04.22.13.43.43;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	91.04.22.13.43.42;	author norm;	state Exp;
branches;
next	;


desc
@
@


1.4
log
@Cleanup syntax, new ccalls, time fixes
@
text
@% 
% @@(#)Bitchunk.m	1.2  3/6/91
%
const Bitchunk <- immutable object Bitchunk builtin 0x1013

  const BitchunkType <- typeobject BitchunkType builtin 0x1613
    function  addr -> [Integer]
    function  getSigned[Integer, Integer] -> [Integer]
    function  getUnsigned[Integer, Integer] -> [Integer]
    function  getElement[Integer, Integer] -> [Integer]
    operation setSigned[Integer, Integer, Integer]
    operation setUnsigned[Integer, Integer, Integer]
    operation setElement[Integer, Integer, Integer]
    operation ntoh[Integer, Integer]
    function = [Bitchunk] -> [Boolean]
    function != [Bitchunk] -> [Boolean]
  end BitchunkType

  export function getSignature -> [ result : Signature ]
    result <- BitchunkType
  end getSignature

  export operation create[n : Integer] -> [ r : BitchunkType ]
    r <- object aBitchunk builtin 0x1413
	
      export function addr -> [r : Integer]
	primitive self [r] <- []
      end addr
      export function getSigned [s : Integer, l : Integer] -> [ r : Integer ]
	primitive self "BGETS" [ r ] <- [ s, l ]
      end getSigned
      export function getUnsigned [s : Integer, l : Integer] -> [ r : Integer ]
	primitive self "BGETU" [ r ] <- [ s, l ]
      end getUnsigned
      export function getElement [s : Integer, l : Integer] -> [ r : Integer ]
	primitive self "BGETU" [ r ] <- [ s, l ]
      end getElement
      export operation setSigned [start : Integer, len : Integer, val : Integer]
	primitive self "BSET" [] <- [start, len, val]
      end setSigned
      export operation setUnsigned [start : Integer, len : Integer, val : Integer]
	primitive self "BSET" [] <- [start, len, val]
      end setUnsigned
      export operation setElement [start : Integer, len : Integer, val : Integer]
	primitive self "BSET" [] <- [start, len, val]
      end setElement
      export operation ntoh [start : Integer, len : Integer]
	primitive self "NTOH" [] <- [start, len]
      end ntoh
      export function = [other : Bitchunk] -> [r : Boolean]
	primitive self "SCMP" "EQ" [r] <- [other]
      end =
      export function != [other : Bitchunk] -> [r : Boolean]
	primitive self "SCMP" "NE" [r] <- [other]
      end !=
    end aBitchunk
  end create
end Bitchunk

export Bitchunk to "Builtins"
@


1.3
log
@Added = and != operations to Bitchunks
@
text
@d4 1
a4 1
const Bitchunk == immutable object Bitchunk builtin 0x1013
d6 1
a6 1
  const BitchunkType == typeobject BitchunkType builtin 0x1613
@


1.2
log
@type -> typeobject sed
@
text
@d15 2
d50 6
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
% @@(#)Bitchunk.m	1.1  3/6/91
d6 1
a6 1
  const BitchunkType == type BitchunkType builtin 0x1613
@
