head	1.5;
access;
symbols
	105alpha:1.5
	104alpha:1.5
	103alpha:1.5
	102alpha:1.5
	101alpha:1.5
	100alpha:1.5
	DIKU_0:1.4
	immel_start:1.3;
locks; strict;


1.5
date	97.01.21.23.51.09;	author norm;	state Exp;
branches;
next	1.4;

1.4
date	93.02.17.17.20.28;	author norm;	state Exp;
branches;
next	1.3;

1.3
date	91.04.22.13.43.31;	author norm;	state Exp;
branches;
next	1.2;

1.2
date	91.04.22.13.43.30;	author norm;	state Exp;
branches;
next	1.1;

1.1
date	91.04.22.13.43.29;	author norm;	state Exp;
branches;
next	;


desc
@
@


1.5
log
@Cleanup syntax, new ccalls, time fixes
@
text
@% 
% @@(#)AbstractType.m	1.3  3/6/91
%
const type <- immutable object type builtin 0x1000
  const typeType <- immutable typeobject typeType builtin 0x1600
    function getSignature -> [Signature]
  end typeType
  export function getSignature -> [result : Signature]
    result <- typeType
  end getSignature
  export operation create -> [r : typeType]
    r <- immutable object aType builtin 0x1400
      export function getSignature -> [r : Signature]
	r <- typetype
      end getSignature
    end aType
  end create
end type

export type to "Builtins"
@


1.4
log
@Implement new builtins: ivectorofany, risa
@
text
@d4 2
a5 2
const type == immutable object type builtin 0x1000
  const typeType == immutable typeobject typeType builtin 0x1600
@


1.3
log
@Hand corrections after typeobject conversion
@
text
@d11 7
@


1.2
log
@type -> typeobject sed
@
text
@d2 1
a2 1
% @@(#)AbstractType.m	1.2  3/6/91
d4 2
a5 2
const type == immutable object AbstractType builtin 0x1000
  const AbstractTypeType == immutable typeobject AbstractTypeType builtin 0x1600
d7 1
a7 1
  end AbstractTypeType
d9 1
a9 1
    result <- AbstractTypeType
d11 1
a11 1
end AbstractType
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
% @@(#)AbstractType.m	1.1  3/6/91
d4 2
a5 2
const AbstractType == immutable object AbstractType builtin 0x1000
  const AbstractTypeType == immutable type AbstractTypeType builtin 0x1600
d13 1
a13 1
export AbstractType to "Builtins"
@
